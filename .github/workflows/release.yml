name: Create Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/saint-michaels-mirror

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4


    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.1'

    # Use the pushed tag name via github.ref_name directly

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build binaries for multiple architectures
      run: |
        mkdir -p dist
        
        # Build for Linux AMD64
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o dist/saint-michaels-mirror-linux-amd64 ./cmd/saint-michaels-mirror
        
        # Build for Linux ARM64
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o dist/saint-michaels-mirror-linux-arm64 ./cmd/saint-michaels-mirror
        
        # Build for macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o dist/saint-michaels-mirror-darwin-amd64 ./cmd/saint-michaels-mirror
        
        # Build for macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o dist/saint-michaels-mirror-darwin-arm64 ./cmd/saint-michaels-mirror
        
        # Build for Windows AMD64
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o dist/saint-michaels-mirror-windows-amd64.exe ./cmd/saint-michaels-mirror
        
        # Build for Windows ARM64
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o dist/saint-michaels-mirror-windows-arm64.exe ./cmd/saint-michaels-mirror

    - name: Generate checksums
      run: |
        cd dist
        sha256sum * > checksums.txt


    - name: Create Release
      id: create_release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Delete existing release if it exists
        gh release delete "${{ github.ref_name }}" --yes 2>/dev/null || true
        
        # Generate release body from template with variable substitutions
        sed -e "s/{{VERSION}}/${{ github.ref_name }}/g" \
            -e "s/{{REGISTRY}}/ghcr.io\/girino\/saint-michaels-mirror/g" \
            -e "s/{{IMAGE_NAME}}/saint-michaels-mirror/g" \
            .github/workflows/release-body-template.md > release_body.md
        
        # Create the release using GitHub CLI
        if [[ "${{ github.ref_name }}" == *"alpha"* || "${{ github.ref_name }}" == *"beta"* || "${{ github.ref_name }}" == *"rc"* ]]; then
          gh release create ${{ github.ref_name }} --title "Espelho de São Miguel ${{ github.ref_name }}" --notes-file release_body.md --prerelease
        else
          gh release create ${{ github.ref_name }} --title "Espelho de São Miguel ${{ github.ref_name }}" --notes-file release_body.md
        fi

    - name: Create Binary Archive
      run: |
        cd dist
        
        # Create a complete release directory with binaries and assets
        mkdir -p saint-michaels-mirror-${{ github.ref_name }}
        
        # Copy binaries and checksums
        cp *.exe saint-michaels-mirror-${{ github.ref_name }}/ 2>/dev/null || true
        cp saint-michaels-mirror-* saint-michaels-mirror-${{ github.ref_name }}/ 2>/dev/null || true
        cp checksums.txt saint-michaels-mirror-${{ github.ref_name }}/ 2>/dev/null || true
        
        # Copy static and template folders
        cp -r ../cmd/saint-michaels-mirror/static saint-michaels-mirror-${{ github.ref_name }}/
        cp -r ../cmd/saint-michaels-mirror/templates saint-michaels-mirror-${{ github.ref_name }}/
        
        # Copy example.env as a template
        cp ../example.env saint-michaels-mirror-${{ github.ref_name }}/
        
        # Copy docker-compose files for easy deployment
        cp ../docker-compose.prod.yml saint-michaels-mirror-${{ github.ref_name }}/
        cp ../Dockerfile saint-michaels-mirror-${{ github.ref_name }}/ 2>/dev/null || true
        cp ../nginx.conf.example saint-michaels-mirror-${{ github.ref_name }}/ 2>/dev/null || true
        cp ../DEPLOYMENT.md saint-michaels-mirror-${{ github.ref_name }}/ 2>/dev/null || true
        cp ../CHANGELOG.md saint-michaels-mirror-${{ github.ref_name }}/ 2>/dev/null || true
        
        # Create tar.gz archive (for Linux/macOS users)
        tar -czf saint-michaels-mirror-${{ github.ref_name }}-complete.tar.gz saint-michaels-mirror-${{ github.ref_name }}/
        
        # Create zip archive (for Windows users)
        zip -r saint-michaels-mirror-${{ github.ref_name }}-complete.zip saint-michaels-mirror-${{ github.ref_name }}/
        
        ls -la

    - name: Upload Release Assets
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Upload complete archives
        gh release upload "${{ github.ref_name }}" ./dist/saint-michaels-mirror-${{ github.ref_name }}-complete.tar.gz
        gh release upload "${{ github.ref_name }}" ./dist/saint-michaels-mirror-${{ github.ref_name }}-complete.zip
        
        # Upload checksums and curated changelog
        gh release upload "${{ github.ref_name }}" ./dist/checksums.txt
        if [ -f CHANGELOG.md ]; then gh release upload "${{ github.ref_name }}" ./CHANGELOG.md; fi
        
        # Upload version-specific release notes if present (as RELEASE_NOTES.md)
        if [ -f ".github/release-notes/${{ github.ref_name }}.md" ]; then
          cp ".github/release-notes/${{ github.ref_name }}.md" RELEASE_NOTES.md
          gh release upload "${{ github.ref_name }}" RELEASE_NOTES.md
        fi